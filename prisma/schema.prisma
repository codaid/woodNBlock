// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                    String  @id @default(cuid())
  userId                String
  type                  String
  provider              String
  providerAccountId     String
  refreshTokenExpiresIn String?
  refresh_token         String?
  access_token          String?
  expires_at            Int?
  token_type            String?
  scope                 String?
  id_token              String?
  session_state         String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now()) @map("created_at")

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

enum UserType {
	admin
	commercial
	user
}
model User {
  id            String    @id @default(cuid())
  email         String?   @unique
  username      String?   @unique
  firstname     String?
  lastname      String?
  emailVerified DateTime?
  image         String?
  userType		UserType
  password		String
  phone		String

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model Catalog {
  id            String    @id @default(cuid())
  title	        String    @unique

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Prospect {
  id                          String   @id @default(cuid())
  firstname                   String
  lastname                    String
  phone                       String
  email                       String
  address_street                      String?  // Adresse
  address_postCode                    String?  // Code postal
  address_city                        String?  // Ville
  rdvTypes                    String[] // Un tableau pour les types de rendez-vous (constructionProject, becomeReseller, becomeProvider)

  // Détails du projet de construction
  constructionProject_haveBuildingSite            Boolean  @default(false)
  constructionProject_buildingPostCode            String?  // Code postal du chantier
  constructionProject_parcelNumber                String?  // Numéro de la parcelle (optionnel)
  constructionProject_havePlan                    Boolean  @default(false)
  constructionProject_haveIdeaProject             Boolean  @default(false)
  constructionProject_wantSeeTemplate             Boolean  @default(false)

  // Détails revendeur
  reseller_haveIndividualBusiness       Boolean  @default(false)
  reseller_legalRepresentativ           Boolean  @default(false)
  reseller_wantMoreBeforeOpeningBusiness Boolean  @default(false)

  // Détails prestataire
  providerServices            String[] // Tableau pour les services proposés (ex: VRD, Terrassement, etc.)

  createdAt                   DateTime @default(now()) // Date de création
}
